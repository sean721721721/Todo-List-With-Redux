{"version":3,"sources":["store/index.js","components/TrashButton.js","components/DoneButton.js","components/Item.js","components/ItemList.js","components/TodoList.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","data","title","done","store","createStore","state","action","console","log","task","type","tasks","TrashButton","props","handleRemove","className","data-text","onClick","DoneButton","handleCheck","removeTaskAction","Item","useSelector","itemDiv","useRef","titleSpan","iconDiv","dispatch","useDispatch","useEffect","setTimeout","current","classList","add","ref","e","preventDefault","splice","index","ItemList","map","TodoList","useState","setTask","input","focus","onSubmit","addTaskAction","target","reset","onChange","value","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0d04659.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst INITIAL_STATE = {\r\n  data: [\r\n  \t{title: 'Get up early', done: false},\r\n    {title: 'Have Breakfast', done: false},\r\n    {title: 'Start coding', done: false}\r\n\t]\r\n\t// data: [\r\n\t// \t'javascipt',\r\n\t// \t'css',\r\n\t// \t'html'\r\n\t// ]\r\n}\r\n\r\nfunction tasks(state = INITIAL_STATE, action) {\r\n\tconsole.log(action.task)\r\n  switch (action.type) {\r\n    case 'ADD_TASK':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tdata: [...state.data, action.task]\r\n\t\t}\r\n\tcase 'REMOVE_TASK':\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tdata: [...action.tasks]\r\n\t\t}\r\n\tdefault:\r\n\t\treturn state;\r\n  }\r\n}\r\n\r\nconst store = createStore(tasks);\r\n\r\nexport default store;","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\n\r\nconst TrashButton = props => {\r\n    const { task, handleRemove } = props;\r\n\r\n    return (\r\n        <div className=\"wait_item_icons_trash\">\r\n            <i className=\"far fa-trash-alt\" data-text={task} onClick={handleRemove}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrashButton;","import React from 'react';\r\n\r\nconst DoneButton = props => {\r\n    const { task, handleCheck } = props;\r\n\r\n    return (\r\n        <div className=\"wait_item_icons_done\">\r\n            <i className=\"fas fa-check-circle\" data-text={task} onClick={handleCheck}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoneButton;","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TrashButton from './TrashButton';\r\nimport DoneButton from './DoneButton';\r\n\r\nconst removeTaskAction = tasks => {\r\n    return { type: 'REMOVE_TASK', tasks }\r\n}\r\n\r\nconst Item = props => {\r\n    const { done, title } = props.tasks;\r\n    let tasks = useSelector(state => state.data);\r\n    \r\n    const itemDiv = useRef(null);\r\n    const titleSpan = useRef(null);\r\n    const iconDiv = useRef(null);\r\n    const dispatch =useDispatch();\r\n    \r\n    const removeTask = (e) => {\r\n        e.preventDefault();\r\n        tasks.splice(props.index, 1);\r\n        dispatch(removeTaskAction(tasks));\r\n    }\r\n\r\n    const checkTask = (e) => {\r\n        e.preventDefault();\r\n        tasks[props.index].done = true;\r\n        dispatch(removeTaskAction(tasks));\r\n    }\r\n\r\n    // const handleMouseOver = () => {\r\n    //     iconDiv.current.style.cursor = 'pointer';\r\n    // }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            itemDiv.current.classList.add('active');\r\n            titleSpan.current.classList.add('active');\r\n            iconDiv.current.classList.add('active');\r\n        }, 0);\r\n    })\r\n\r\n    return (\r\n        <div ref={itemDiv} className={`${done ? 'done' : 'wait'}-item`}>\r\n            <span ref={titleSpan}>{title}</span>\r\n            <div ref={iconDiv} className=\"item_icons\">\r\n                <TrashButton task={title} handleRemove={removeTask} />\r\n                { !done && <DoneButton task={title} handleCheck={checkTask} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Item from './Item';\r\n\r\n\r\nconst ItemList = props => {\r\n    const { type, tasks } = props;\r\n\r\n    return (\r\n        <div className={`${type}-list`}>\r\n            {tasks.map((task, index) => <Item key={index} tasks={task} index={index} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList;","/* eslint-disable no-unused-vars */\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Item from './Item';\r\nimport ItemList from './ItemList';\r\nimport './style.css';\r\n\r\nconst addTaskAction = (task) => {\r\n    return { type: 'ADD_TASK', task}\r\n}\r\n\r\nconst TodoList = () => {\r\n    const [task, setTask] = useState('');\r\n    const tasks = useSelector(state => state.data);\r\n    console.log(tasks);\r\n    const input = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addTaskAction(task));\r\n        console.log('add');\r\n        setTask({title:'', done: false});\r\n        e.target.reset();\r\n\r\n    }\r\n\r\n    const taskOnChange = e => {\r\n        setTask({title: e.target.value, done: false});\r\n    }\r\n\r\n    useEffect(() => {\r\n        input.current.focus();\r\n    });\r\n\r\n    console.log('render TodoList');\r\n    return (\r\n        <div className=\"container\">\r\n            <header>To-Do List</header>\r\n            <form onSubmit={addTask}>\r\n                <input ref={input} type=\"text\" onChange={taskOnChange}></input>\r\n                <button type=\"submit\"><i className=\"fas fa-plus-circle send\"></i></button>\r\n            </form>\r\n            <div className=\"wait-item-list\">\r\n                <span>Wait Item<i className=\"fas fa-list-ul\"></i></span>\r\n                <ItemList type=\"wait\" tasks={tasks.filter(task => !task.done)} />\r\n            </div>\r\n            <div className=\"done-item-list\">\r\n                <span>Done Item<i className=\"far fa-calendar-check\"></i></span>\r\n                <ItemList type=\"done\" tasks={tasks.filter(task => task.done)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport TodoList from './components/TodoList';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<Provider store={store}>\n    \t<TodoList />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}